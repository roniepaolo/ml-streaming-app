- name: Create a directory if it does not exist
  file:
    path: "{{ item }}"
    state: directory
    owner: ubuntu
    group: ubuntu
  loop:
    - "{{ app_dir }}"
    - "{{ pg_data_dir }}"

- name: Create secrets directories if it does not exist
  file:
    path: "{{ item }}"
    state: directory
    owner: ubuntu
    group: ubuntu
  loop:
    - "{{ keys_dir }}"
    - "{{ secrets_dir }}"

- name: Find Postgres deployment files (docker-compose)
  become: yes
  find:
    paths: "{{ app_src }}"
    hidden: yes
    use_regex: yes
    patterns: .*\.(yml|yaml)$
  delegate_to: localhost
  register: dc_files

- name: Push Postgres deployment files (docker-compose)
  copy:
    src: "{{ item.path }}"
    dest: "{{ app_dir }}"
    owner: ubuntu
    group: ubuntu
  with_items:
    - "{{ dc_files.files }}"

- name: Push Postgres configuration files
  copy:
    src: "{{ pg_config_src }}"
    dest: "{{ app_dir }}"
    owner: ubuntu
    group: ubuntu

- name: Create SSL credentials for server
  shell:
    chdir: "{{ keys_dir }}"
    cmd: |
      openssl req -new -nodes -text -out root.csr \
        -keyout root.key -subj "/CN={{ hostname }}";
  
      chmod og-rwx root.key;

      openssl x509 -req -in root.csr -text -days 3650 \
        -extfile /etc/ssl/openssl.cnf -extensions v3_ca \
        -signkey root.key -out root.crt;
  
      openssl req -new -nodes -text -out server.csr \
        -keyout server.key -subj "/CN={{ hostname }}";
  
      chmod og-rwx server.key;

      openssl x509 -req -in server.csr -text -days 3650 \
        -CA root.crt -CAkey root.key -CAcreateserial \
        -out server.crt;

      chown -R 70:70 "{{ keys_dir }}" "{{ secrets_dir }}";


